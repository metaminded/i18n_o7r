- outer = outer
- if outer
  - @n = 0
- store.each do |k, v|
  - next if I18nO7r.excluded_subtrees.present? && I18nO7r.excluded_subtrees.any? { |t| k.to_s.start_with?(t) }
  - newkeys = [keys, k].flatten
  - case v
  - when Hash
    - c = v._deep_count {|v| v == nil ? 1 : 0 }
    - if c > 0
      - if outer
        - @n += c
      li
        => link_to i18n_o7r_translations_path(newkeys), class: 'btn btn-default btn-sm'
          tt
            - kk = newkeys.join('.')
            = "#{kk} (#{c})"
        ul
          = render 'tree', store: v, keys: newkeys
  - else
    / nothing!
